# CITS3403 Project

## Project Overview

This project is a web application for students to help students, where you can offer your skills and services or request help when you need it and together, help build a vibrant and supportive UWA community.

### User Workflow

1. **Sign Up**: Click the blue link on the page you are on that says "Don't have an account? Create Account here" to navigate to the page to create a new account. Once you are there, create an account by providing your username, email, password, and then password again. Click "Signup". You are now navigated to the sign-in.
2. **Sign In**: Log in with your username and password. If you would like the site to remember your details, select "Remember Me". Click "Login". You are now navigated to the user's page called "Home".
3. **Welcome Message**: Upon login and subsequent navigation to the user page "Home", you will see a pop-op welcome message describing the purpose of this webseit. Read carefully. Click "Close".
4. **Navigation Bar**: At the top of every page, there is a navigation bar. If you are on another page and want to return to the user page to view your items and accepts, click "Home". If you want to browse, search, or accept offers, click "Offers". If you want to browse, search, or accept requests, click "Requests".
5. **Navigate Offers/Requests**:
   - **Offers Page**: Users can browse and accept various service offers.
   - **Requests Page**: Users can browse and accept requests for services.
   - **Search Functionality**: Users can search for specific keywords or scroll through the list.
6. **Accept Offers/Requests**: Once users find a suitable offer or request, they can click accept. Accepted items will appear under "Your Accepts" on the home page.
7. **Contact or Cancel**:
   - **Contact**: Users can contact the offer/request owner via email when the contact button is clicked.
   - **Cancel**: If users decide not to engage, they can cancel, returning the offer/request to the respective pages.
8. **Create Offers/Requests**: Users can create their own offers or requests by clicking the big plus button, filling out a form with a category name and description of their choice, and submitting it. The new offer/request will appear on the offers/requests page and under "Your Items".
9. **Resolve Offers/Requests**: Users can resolve their items once completed. The contact button appears only if someone accepts the offer/request, enabling further discussion via email.

## Files and Directory Structure

### Configuration and Initialization

- **`config.py`**: Configuration settings for the Flask application.
- **`application.py`**: Main application file where the Flask app is created and routes are defined.
- **`__init__.py`**: Initialization file for setting up the Flask app and configuration.
- **`env.py`**: Environment configuration file for setting up environment variables.
- **`alembic.ini`**: Configuration file for Alembic, a database migration tool for SQLAlchemy.

### Application Logic

- **`forms.py`**: Form definitions using Flask-WTF for handling and validation.
- **`models.py`**: Database models using SQLAlchemy for ORM.
- **`routes.py`**: Routes/endpoints and corresponding view functions.
- **`test_data.py`**: Test data for populating the database during development or testing.
- **`testing.py`**: Testing scripts to ensure application functionality.

### Templates (HTML)

- **`templates/base.html`**: Base template that other HTML templates extend, including common HTML structure and resources.
- **`templates/login.html`**: Login page template for user authentication.
- **`templates/mainpage.html`**: Main page template displaying user items and accepted items.
- **`templates/navbar.html`**: Navigation bar template for consistent navigation between menu items.
- **`templates/offer_request_form.html`**: Form template for creating offers and requests.
- **`templates/offers.html`**: Template for displaying available offers.
- **`templates/requests.html`**: Template for displaying available requests.
- **`templates/searchboxitem.html`**: Template for rendering individual search result items.
- **`templates/signup.html`**: Sign-up page template for new user registration.

### Static Files

#### CSS

- **`static/css/login_signup.css`**: Styling for the login and signup pages.
- **`static/css/main.css`**: Styling for the home page.
- **`static/css/offers.css`**: Styling for the offers page.
- **`static/css/requests.css`**: Styling for the requests page.

#### JavaScript

- **`static/js/form.js`**: Handles the offers/ request form-related scripts.
- **`static/js/resolve_activity.js`**: Manages the resolving of completed offer and request services.
- **`static/js/cancel_activity.js`**: Handles the cancelling of offer and request services.
- **`static/js/accept_activity.js`**: Manages the acceptance of activities.
- **`static/js/search.js`**: Manages search functionality.
- **`static/js/toast.js`**: Handles toast notifications.
- **`static/js/welcome_modal.js`**: Handles the welcome pop up message.

### Miscellaneous

- **`script.py.mako`**: Mako template script for generating dynamic content.
- **`LICENSE`**: Licensing information for the project.
- **`requirements.txt`**: Used to install all the necessary dependencies.

### Installation Steps

### Installation Steps

1. **Clone the repository**

   ```bash
   git clone <https://github.com/Divrr/CITS3403-project.git>
   ```

2. **Create a virtual environment**

   ```bash
   python -m venv venv
   source venv/bin/activate  # On Windows use `venv\Scripts\activate`
   ```

3. **Install the dependencies**

   ```bash
   pip install -r requirements.txt
   ```

4. **Start the application**

   ```bash
   flask run
   ```

## Running the Application

Open your web browser and navigate to [http://127.0.0.1:5000/](http://127.0.0.1:5000/) to see the application in action.

## Authors

- **Adib Rohani 23722809**: [Divrr](https://github.com/Divrr)
- **Aviv Dvir Silman 22917067**: [hhK2001-blast](https://github.com/hhK2001-blast)
- **Theresa Needham 23348927**: [TheresaNeedham](https://github.com/TheresaNeedham)
- **Zahra Vink 23987684**: [zahravink](https://github.com/zahravink)

## Licensing

This project is licensed under the terms specified in the `LICENSE` file.

## Image References

- **Plus Icon**:
- **Profile Icon**:
  FLATICON- ![Profile Icon](https://www.flaticon.com/free-icon/profile_3135715)
- **Tick Icon**:
  Stockio- ![Tick Icon](https://www.stockio.com/free-clipart/green-tick-simple#google_vignette)
- **University of Western Australia Logo**:
  ![UWA Logo](https://www.google.com/url?sa=i&url=https%3A%2F%2Fseeklogo.com%2Fvector-logo%2F491535%2Fthe-university-of-western-australia&psig=AOvVaw0kMSh4zbcN1o5-PJmUoKJ0&ust=1716040660013000&source=images&cd=vfe&opi=89978449&ved=0CBQQjhxqFwoTCLDvoOHrlIYDFQAAAAAdAAAAABAI)
- **University of Western Australia Background**:
  Churchill Gowns- ![UWA Background](https://www.churchillgowns.com.au/pages/university-of-western-australia)
- **Cancel Icon**:
  CLEANPNG- ![Cancel Icon](https://www.cleanpng.com/png-button-computer-icons-cancel-button-831795/)
